#!/usr/bin/env node
"use strict";var n=require("node:process"),G=require("node:child_process");require("@actions/core");const o=(e,i={})=>new Promise((s,r)=>{try{G.exec(e,i,(t,a,c)=>{t!=null&&r(t),s({stdout:a,stderr:c})})}catch(t){r(t)}});Object.freeze({WORKDIR:".",GPG_PRIVATE_KEY:void 0,GPG_PASSPHRASE:void 0,GPG_FINGERPRINT:void 0,GPG_TRUST_LEVEL:void 0,GIT_SCOPE:"local",GIT_SIGN_USER:!0,GIT_SIGN_COMMIT:!1,GIT_SIGN_TAG:!1,GIT_SIGN_PUSH:"if-asked",TOKEN:n.env.GITHUB_TOKEN});const _=async()=>{const[e,i,s]=n.argv.slice(2),r=`v${e}`;await o(`git tag -d ${r}`),await o(`git push origin -d tag ${r}`);const t=`release: ${r}`;return await o(`git tag -s ${r} -m "${t}

${i}"`),await o(`git push origin ${r}`),s};_().then(e=>{console.log("result:",e)}).catch(e=>{throw e instanceof Error?e:new Error("Unknown error")});

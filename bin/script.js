#!/usr/bin/env node
"use strict";var m=require("node:process"),r=require("@actions/core"),h=require("node:child_process");const i=(t,a={})=>new Promise((n,e)=>{try{h.exec(t,a,(o,s,g)=>{o!=null&&e(o),n({stdout:s,stderr:g})})}catch(o){e(o)}}),p=async()=>{const[t,a,n]=m.argv.slice(2),e=`v${t}`,o=r.getInput("git-author-name"),s=r.getInput("git-author-email"),g=r.getInput("git-committer-name"),c=r.getInput("git-committer-email"),l=r.getInput("gpg-passphrase");console.log("gitAuthorName:",o),console.log("gitAuthorEmail:",s),console.log("gitCommitterName:",g),console.log("gitCommitterEmail:",c),console.log("gpgPassphrase:",l),await i(`git tag -d ${e}`),await i(`git push origin -d tag ${e}`);const u=`release: ${e}`;return await i(`git tag -s ${e} -m "${u}

${a}"`),await i(`git push origin ${e}`),n};p().then(t=>{console.log("result:",t)}).catch(t=>{throw t instanceof Error?t:new Error("Unknown error")});

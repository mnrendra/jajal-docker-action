"use strict";var _=require("node:child_process");require("@actions/core");var p=require("node:process");const s=(t,e={})=>new Promise((r,n)=>{try{_.exec(t,e,(o,l,c)=>{o!=null&&n(o),r({stdout:l,stderr:c})})}catch(o){n(o)}});Object.freeze({WORKDIR:".",GPG_PRIVATE_KEY:void 0,GPG_PASSPHRASE:void 0,GPG_FINGERPRINT:void 0,GPG_TRUST_LEVEL:void 0,GIT_SCOPE:"local",GIT_SIGN_USER:!0,GIT_SIGN_COMMIT:!1,GIT_SIGN_TAG:!1,GIT_SIGN_PUSH:!1,TOKEN:p.env.GITHUB_TOKEN});const I=({branch:t,nextRelease:e})=>({branch:t.name,version:e.version,tag:e.gitTag,notes:e.notes??""}),T=async(t={},e)=>{const{branch:r,version:n,tag:o,notes:l}=I(e);console.log("options:",t),console.log("branch:",r),console.log("version:",n),console.log("tag:",o),console.log("notes:",l),console.log("-------------- dari plugin: delete local tag ----------");const c=await s(`git tag -d ${o}`);console.log("stderr:",c.stderr),console.log("stdout:",c.stdout),console.log("-------------- dari plugin: delete remote tag ---------");const a=await s(`git push origin -d tag ${o}`);console.log("stderr:",a.stderr),console.log("stdout:",a.stdout);const g=`release: ${o}`;console.log("-------------- dari plugin: commit release ------------");const i=await s(`git commit -S --allow-empty -m "${g}

${l}"`);console.log("stderr:",i.stderr),console.log("stdout:",i.stdout),console.log("-------------- dari plugin: tag release ---------------");const d=await s(`git tag -s ${o} -m "${g}

${l}"`);console.log("stderr:",d.stderr),console.log("stdout:",d.stdout),console.log("-------------- dari plugin: push commit release --------------");const u=await s(`git push origin ${r}`);console.log("stderr:",u.stderr),console.log("stdout:",u.stdout),console.log("-------------- dari plugin: push tag release --------------");const G=await s(`git push origin ${o}`);console.log("stderr:",G.stderr),console.log("stdout:",G.stdout)};exports.publish=T;

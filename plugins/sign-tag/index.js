"use strict";var u=require("node:child_process");require("@actions/core");var G=require("node:process");const r=(s,e={})=>new Promise((c,t)=>{try{u.exec(s,e,(o,l,n)=>{o!=null&&t(o),c({stdout:l,stderr:n})})}catch(o){t(o)}});Object.freeze({WORKDIR:".",GPG_PRIVATE_KEY:void 0,GPG_PASSPHRASE:void 0,GPG_FINGERPRINT:void 0,GPG_TRUST_LEVEL:void 0,GIT_SCOPE:"local",GIT_SIGN_USER:!0,GIT_SIGN_COMMIT:!1,GIT_SIGN_TAG:!1,GIT_SIGN_PUSH:!1,TOKEN:G.env.GITHUB_TOKEN});const _=({branch:s,nextRelease:e})=>({branch:s.name,version:e.version,tag:e.gitTag,notes:e.notes??""}),I=async(s={},e)=>{const{branch:c,version:t,tag:o,notes:l}=_(e);console.log("options:",s),console.log("branch:",c),console.log("version:",t),console.log("tag:",o),console.log("notes:",l),console.log("-------------- dari plugin: delete local tag ----------");const n=await r(`git tag -d ${o}`);console.log("stderr:",n.stderr),console.log("stdout:",n.stdout),console.log("-------------- dari plugin: delete remote tag ---------");const a=await r(`git push origin -d tag ${o}`);console.log("stderr:",a.stderr),console.log("stdout:",a.stdout);const d=`release: ${o}`;console.log("-------------- dari plugin: tag release ---------------");const g=await r(`git tag -s ${o} -m "${d}

${l}"`);console.log("stderr:",g.stderr),console.log("stdout:",g.stdout),console.log("-------------- dari plugin: push tag release --------------");const i=await r(`git push origin ${o}`);console.log("stderr:",i.stderr),console.log("stdout:",i.stdout)};exports.publish=I;

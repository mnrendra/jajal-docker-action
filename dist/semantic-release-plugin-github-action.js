"use strict";var m=require("execa");const a=async(s,e=[])=>await m.execa("git",[s,...e]),h=(s,{allowEmpty:e=!1,keyid:t,sign:n=!1}={})=>{const o=[];if(n){const l="-S",c=typeof t=="string"&&t!==""?`${l}${t}`:l;o.push(c)}return e&&o.push("--allow-empty"),[...o,"-m",`${s}`]},$=async(s,e={})=>{const t=h(s,e);return await a("commit",t)},w=(s,{get:e=!1,list:t=!1,unset:n=!1,scope:o="local",value:l}={})=>{const c=[`--${o}`];return l!=null?c.push(`${s}`,`${l.toString()}`):e?c.push("--get",`${s}`):n?c.push("--unset",`${s}`):t&&c.push("--list"),c},r=async(s,e)=>{const t=w(s,e);return await a("config",t)},y=(s,{delete:e=!1,remote:t="origin",signed:n=!1}={})=>{const o=[t,s];return e?[t,"-d",s]:(n!==!1&&o.push(`--signed=${n}`),o)},b=async(s,e={})=>{const t=y(s,e);return await a("push",t)},v=(s,{commit:e,delete:t=!1,message:n="",sign:o=!1}={})=>{if(t)return["-d",s];const l=[];return o&&l.push("-s"),l.push(s),e!==void 0&&l.push(e),[...l,"-m",`${n}`]},N=async(s,e={})=>{const t=v(s,e);return await a("tag",t)},x=async(s,e="local")=>{const{stdout:t}=await r(s,{get:!0,scope:e});if(t==="false")return!1;if(t==="true")return!0;const n=Number(t);return Number.isNaN(n)?t:n},E=async(s,e,t="local")=>await r(s,{scope:t,value:e}),j=s=>({value:s,enumerable:!0,configurable:!1,writable:!1}),k=(s,e)=>{Object.keys(e).forEach(t=>{const n=j(e[t]);Object.defineProperty(s,t,n)})};k(a,{commit:$,config:r,tag:N,push:b,getConfig:x,setConfig:E});const C=({branch:s,nextRelease:e})=>({branch:s.name,version:e.version,tag:e.gitTag,notes:e.notes??""}),O=async(s={},e)=>{const{branch:t,version:n,tag:o,notes:l}=C(e);console.log("options:",s),console.log("branch:",t),console.log("version:",n),console.log("tag:",o),console.log("notes:",l),console.log("-------------- using git. delete local tag ----------");const c=await a.tag(o,{delete:!0});console.log("stderr:",c.stderr),console.log("stdout:",c.stdout),console.log("-------------- using git. delete remote tag ---------");const g=await a.push(o,{delete:!0});console.log("stderr:",g.stderr),console.log("stdout:",g.stdout);const i=`release: ${o}`;console.log("-------------- using git. commit release ------------");const u=await a.commit(`${i}

${l}`,{sign:!0,allowEmpty:!0});console.log("stderr:",u.stderr),console.log("stdout:",u.stdout),console.log("-------------- using git. tag release ---------------");const d=await a.tag(o,{sign:!0,message:`${i}

${l}`});console.log("stderr:",d.stderr),console.log("stdout:",d.stdout),console.log("-------------- using git. push commit release --------------");const p=await a.push(t);console.log("stderr:",p.stderr),console.log("stdout:",p.stdout),console.log("-------------- using git. push tag release --------------");const f=await a.push(o);console.log("stderr:",f.stderr),console.log("stdout:",f.stdout)};exports.publish=O;

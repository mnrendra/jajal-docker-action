"use strict";var m=require("execa");const a=async(e,s=[])=>await m.execa("git",[e,...s]),h=(e,{allowEmpty:s=!1,keyid:o,sign:n=!1}={})=>{const t=[];if(n){const l="-S",r=typeof o=="string"&&o!==""?`${l}${o}`:l;t.push(r)}return s&&t.push("--allow-empty"),[...t,"-m",`${e}`]},$=async(e,s={})=>{const o=h(e,s);return await a("commit",o)},w=(e,{get:s=!1,list:o=!1,unset:n=!1,scope:t="local",value:l}={})=>{const r=[`--${t}`];return l!=null?r.push(`${e}`,`${l.toString()}`):s?r.push("--get",`${e}`):n?r.push("--unset",`${e}`):o&&r.push("--list"),r},c=async(e,s)=>{const o=w(e,s);return await a("config",o)},y=async(e,s="local")=>{const{stdout:o}=await c(e,{get:!0,scope:s});if(o==="false")return!1;if(o==="true")return!0;const n=Number(o);return Number.isNaN(n)?o:n},b=async(e,s,o="local")=>await c(e,{scope:o,value:s}),v=(e,{delete:s=!1,remote:o="origin",signed:n=!1}={})=>{const t=[o,e];return s?[o,"-d",e]:(n!==!1&&t.push(`--signed=${n}`),t)},C=async(e,s={})=>{const o=v(e,s);return await a("push",o)},N=(e,{commit:s,delete:o=!1,message:n="",sign:t=!1}={})=>{if(o)return["-d",e];const l=[];return t&&l.push("-s"),l.push(e),s!==void 0&&l.push(s),[...l,"-m",`${n}`]},x=async(e,s={})=>{const o=N(e,s);return await a("tag",o)},E=e=>({value:e,enumerable:!0,configurable:!1,writable:!1}),j=(e,s)=>{Object.keys(s).forEach(o=>{const n=E(s[o]);Object.defineProperty(e,o,n)})};j(a,{commit:$,config:c,getConfig:y,setConfig:b,push:C,tag:x});const k=({branch:e,nextRelease:s})=>({branch:e.name,version:s.version,tag:s.gitTag,notes:s.notes??""}),O=async(e={},s)=>{const{branch:o,version:n,tag:t,notes:l}=k(s);console.log("options:",e),console.log("branch:",o),console.log("version:",n),console.log("tag:",t),console.log("notes:",l),console.log("-------------- using git. delete local tag ----------");const r=await a.tag(t,{delete:!0});console.log("stderr:",r.stderr),console.log("stdout:",r.stdout),console.log("-------------- using git. delete remote tag ---------");const g=await a.push(t,{delete:!0});console.log("stderr:",g.stderr),console.log("stdout:",g.stdout);const i=`release: ${t}`;console.log("-------------- using git. commit release ------------");const u=await a.commit(`${i}

${l}`,{sign:!0,allowEmpty:!0});console.log("stderr:",u.stderr),console.log("stdout:",u.stdout),console.log("-------------- using git. tag release ---------------");const d=await a.tag(t,{sign:!0,message:`${i}

${l}`});console.log("stderr:",d.stderr),console.log("stdout:",d.stdout),console.log("-------------- using git. push commit release --------------");const f=await a.push(o);console.log("stderr:",f.stderr),console.log("stdout:",f.stdout),console.log("-------------- using git. push tag release --------------");const p=await a.push(t);console.log("stderr:",p.stderr),console.log("stdout:",p.stdout)};exports.publish=O;

"use strict";var u=require("execa");const o=async(e,s=[])=>await u.execa("git",[e,...s]),g=(e,{allowEmpty:s=!1,keyid:t,sign:a=!1}={})=>{const n=[];if(a){const c="-S",r=typeof t=="string"&&t!==""?`${c}${t}`:c;n.push(r)}return s&&n.push("--allow-empty"),[...n,"-m",`${e}`]},f=async(e,s={})=>{const t=g(e,s);return await o("commit",t)},p=(e,{get:s=!1,list:t=!1,unset:a=!1,scope:n="local",value:c}={})=>{const r=[`--${n}`];return c!=null?r.push(`${e}`,`${c.toString()}`):s?r.push("--get",`${e}`):a?r.push("--unset",`${e}`):t&&r.push("--list"),r},i=async(e,s)=>{const t=p(e,s);return await o("config",t)},m=async(e,s="local")=>{const{stdout:t}=await i(e,{get:!0,scope:s});if(t==="false")return!1;if(t==="true")return!0;const a=Number(t);return Number.isNaN(a)?t:a},h=async(e,s,t="local")=>await i(e,{scope:t,value:s}),$=(e,{tags:s=!1}={})=>{const t=[];let a="";return s===!0&&t.push("--tags"),typeof s=="string"&&(a=s),[...t,e,a]},w=async(e,s={})=>{const t=$(e,s);return await o("ls-remote",t)},y=(e,{delete:s=!1,remote:t="origin",signed:a=!1}={})=>{const n=[t,e];return s?[t,"-d",e]:(a!==!1&&n.push(`--signed=${a}`),n)},d=async(e,s={})=>{const t=y(e,s);return await o("push",t)},b=(e,{commit:s,delete:t=!1,list:a=!1,message:n="",sign:c=!1}={})=>{if(t)return["-d",e];if(a===!0)return["-l"];if(typeof a=="string")return["-l",a];const r=[];return c&&r.push("-s"),r.push(e),s!==void 0&&r.push(s),[...r,"-m",`${n}`]},v=async(e,s={})=>{const t=b(e,s);return await o("tag",t)},C=e=>({value:e,enumerable:!0,configurable:!1,writable:!1}),E=(e,s)=>{Object.keys(s).forEach(t=>{const a=C(s[t]);Object.defineProperty(e,t,a)})};E(o,{commit:f,config:i,getConfig:m,setConfig:h,lsRemote:w,push:d,tag:v});const N=(e,s)=>s.split(".").reduce((t,a)=>t?.[a],e),l=(e,s="")=>[...s.matchAll(/{(.*?)}/g)].map(t=>t[1]).reduce((t,a)=>{const n=N(e,a);return t.replace(`{${a}}`,`${n}`)},s),x=({branch:e,nextRelease:s})=>({branch:e.name,version:s.version,tag:s.gitTag,notes:s.notes??""}),j=async({commit:e={},tag:s={}}={},t)=>{const{branch:a,tag:n}=x(t),c=l(t,e.message??""),r=l(t,s.message??"");await o.commit(c,{sign:e.sign??!1,allowEmpty:e.allowEmpty??!1}),await o.push(a),await o.tag(n,{delete:!0}),await o.tag(n,{sign:s.sign??!1,message:r}),await o.push(n,{delete:!0}),await o.push(n)};exports.publish=j;
